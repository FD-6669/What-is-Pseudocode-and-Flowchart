Pseudocode

	What is pseudocode? Pseudocode is a draft programming language where the human can easily understand. Pseudocode can be known as an informal way of programming or plain 
language that does not require following any strict programming language. The computer cannot understand human language so pseudocode cannot be compiled into an executable 
program. Thus, pseudocode should not include any keywords in any specific programming language.  Pseudocode is a programming language that is used to create an outline or 
draft of a project. Writing pseudocode is very easy, we just need to start with the algorithm we are using and phrase it using words that are easily transcribed into 
computer instructions. Pseudocode is usually written before it is converted into a specific programming language. Pseudocode is used as a comprehensive step in the 
processing of developing an executable program. It is designed for the lead programmer or project manager to explain the detailed templates for programmers for the next 
coding step. Programmers can identify top-level flow errors, and understand how the programming data flow of the final program through pseudocode. Lead programmer or 
project manager and programmers will read through the pseudocode and make sure that actual programming is matching the design specifications. Pseudocode will help to save 
time during actual programming because catching errors at the pseudocode stage is less costly compared to later in the development process. Once pseudocode is successfully 
corrected and accepted by the team, it will be used to convert and rewritten using a specific programming language such as C, C++, Python, etc. The biggest advantage of 
pseudocode is understood by programmers of all types. Pseudocode helps programmers to think logically rather than about syntax. Hence, using pseudocode is an efficient key 
principle of an algorithm. 
  
  Below are some common pseudocode verbs used: 
      •	Input: READ, OBTAIN, GET
      •	Output: PRINT, DISPLAY, SHOW
      •	Compute: COMPUTE, CALCULATE, DETERMINE
      •	Initialize: SET, INIT
      •	Add one: INCREMENT, BUMP 
